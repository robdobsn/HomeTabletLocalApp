{
  "version": 3,
  "file": "setup-db.js",
  "sourceRoot": "",
  "sources": [
    "setup-db.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "fs = require('fs')\r\nrequest = require('request')\r\nDefaultTabletConfig = require('../www/js/default-tablet-config.js')\r\n\r\ngetSonosConfig = (deviceConfigList) ->\r\n  sonosConfig = []\r\n  for deviceConfig, confIdx in deviceConfigList\r\n    sonosRoomName = deviceConfig['sonosRoomName']\r\n    roomName = deviceConfig['roomName']\r\n    # Add sonos config if there is a sonos device in the room\r\n    if deviceConfig['sonosRoomName'] is ''\r\n      confIdx++\r\n      continue\r\n    actionConfig = [\r\n      {\r\n        'actionName': 'Play'\r\n        'iconName': 'music-play'\r\n        'uri': '/play'\r\n      }\r\n      {\r\n        'actionName': 'Stop'\r\n        'iconName': 'music-stop'\r\n        'uri': '/pause'\r\n      }\r\n      {\r\n        'actionName': 'Vol +'\r\n        'iconName': 'music-vol-up'\r\n        'uri': '/volume/+10'\r\n      }\r\n      {\r\n        'actionName': 'Vol -'\r\n        'iconName': 'music-vol-down'\r\n        'uri': '/volume/-10'\r\n      }\r\n    ]\r\n    # Add the serverpath and tile info\r\n    for act in actionConfig\r\n      act['actionUrl'] = sonosServerUrl + '/' + sonosRoomName + act['uri']\r\n      act['uri'] = sonosServerUrl + '/' + sonosRoomName + act['uri']\r\n      act['groupName'] = roomName\r\n      act['tierName'] = 'sonosTier'\r\n      act['colSpan'] = 1\r\n      act['rowSpan'] = 1\r\n      act['name'] = act['actionName']\r\n      act['visibility'] = 'all'\r\n      act['tileType'] = 'Sonos'\r\n      sonosConfig.push act\r\n    # console.log(\"setting sonos actions config for \" + sonosRoomName);\r\n    confIdx++\r\n  return sonosConfig\r\n\r\ngetBlindsActions = () ->\r\n  blindsDef =\r\n    [\r\n      [\"Games\", [[\"1\", \"Shade 1\"], [\"2\", \"Shade 2\"]], \"http://\" + gamesRoomBlindsHostname + \"/blind/\"],\r\n      [\"Landing Bath\", [[\"1\", \"Shade\"]], \"http://\" + landingBathBlindsHostname + \"/blind/\"],\r\n      [\"Office\", [[\"1\", \"Rob's Shade\"], [\"2\", \"Left\"], [\"3\", \"Mid-Left\"], [\"4\", \"Mid-Right\"], [\"5\", \"Right\"]],\r\n        \"http://\" + officeBlindsHostname + \"/blind/\"]\r\n    ]\r\n  return genBlindsActions(blindsDef)\r\n\r\ngenBlindsActions = (blindsDefs) ->\r\n  blindsDirns = [[\"Up\", \"up\"], [\"Stop\", \"stop\"], [\"Down\", \"down\"]]\r\n  actions = []\r\n  for room in blindsDefs\r\n    for dirn in blindsDirns\r\n      for win in room[1]\r\n        actions.push {\r\n          tierName: \"doorBlindsTier\",\r\n          actionNum: 0,\r\n          actionName: win[1] + \" \" + dirn[0],\r\n          groupName: room[0],\r\n          actionUrl: room[2] + win[0] + \"/\" + dirn[1] + \"/pulse\",\r\n          iconName: \"blinds-\" + dirn[1]\r\n        }\r\n  return actions\r\n\r\ngetDoorActions = () ->\r\n  return [\r\n#\t\t{\r\n#\t\t\tactionName: \"Main Unlock\", groupName: \"Front Door\", iconName: \"door-unlock\",\r\n#\t\t\tactionUrl: \"https://api.particle.io/v1/devices/320035001147343438323536/apiCall\\?access_token=ab1fba812bf2ff055ef347d9230be5d9a470bdfe~POST~arg=main-unlock\"\r\n#\t\t},\r\n#\t\t{\r\n#\t\t\tactionName: \"Main Lock\", groupName: \"Front Door\", iconName: \"door-lock\",\r\n#\t\t\tactionUrl: \"https://api.particle.io/v1/devices/320035001147343438323536/apiCall\\?access_token=ab1fba812bf2ff055ef347d9230be5d9a470bdfe~POST~arg=main-lock\"\r\n#\t\t},\r\n#\t\t{\r\n#\t\t\tactionName: \"Inner Unlock\", groupName: \"Front Door\", iconName: \"door-unlock\",\r\n#\t\t\tactionUrl: \"https://api.particle.io/v1/devices/320035001147343438323536/apiCall\\?access_token=ab1fba812bf2ff055ef347d9230be5d9a470bdfe~POST~arg=inner-unlock\"\r\n#\t\t},\r\n#\t\t{\r\n#\t\t\tactionName: \"Inner Lock\", groupName: \"Front Door\", iconName: \"door-lock\",\r\n#\t\t\tactionUrl: \"https://api.particle.io/v1/devices/320035001147343438323536/apiCall\\?access_token=ab1fba812bf2ff055ef347d9230be5d9a470bdfe~POST~arg=inner-unlock\"\r\n#\t\t}\r\n    {\r\n      actionName: \"Main Unlock\",\r\n      groupName: \"Front Door\",\r\n      actionUrl: \"http://\" + frontDoorLockHostname + \"/u/0/\" + frontDoorLockUserNum + \"/\" + frontDoorLockUserPin,\r\n      iconName: \"door-unlock\"\r\n    }\r\n    {\r\n      actionName: \"Main Lock\",\r\n      groupName: \"Front Door\",\r\n      actionUrl: \"http://\" + frontDoorLockHostname + \"/l/0\",\r\n      iconName: \"door-lock\"\r\n    }\r\n    {\r\n      actionName: \"Inner Unlock\",\r\n      groupName: \"Front Door\",\r\n      actionUrl: \"http://\" + frontDoorLockHostname + \"/u/1/\" + frontDoorLockUserNum + \"/\" + frontDoorLockUserPin,\r\n      iconName: \"door-unlock\"\r\n    }\r\n    {\r\n      actionName: \"Inner Lock\",\r\n      groupName: \"Front Door\",\r\n      actionUrl: \"http://\" + frontDoorLockHostname + \"/l/1\",\r\n      iconName: \"door-lock\"\r\n    }\r\n  ]\r\n\r\ngetDeviceConfigList = (configDb) ->\r\n  deviceInfoList = []\r\n  # Get contents of folder to find device definition files\r\n  baseFolder = './tablets/'\r\n  folderList = fs.readdirSync(baseFolder)\r\n  fIdx = 0\r\n  while fIdx < folderList.length\r\n    if folderList[fIdx].indexOf('.json') > 0\r\n      jsonStr = fs.readFileSync(baseFolder + folderList[fIdx], encoding: 'utf8')\r\n      jsonStr = replaceAll('@sonosServerUrl', sonosServerUrl, jsonStr)\r\n      devInfo = JSON.parse(jsonStr)\r\n      deviceInfoList.push devInfo\r\n    fIdx++\r\n  return deviceInfoList\r\n\r\ngetServerList = () ->\r\n  return [\r\n# {\"type\":\"indigo\", \"name\":\"IndigoUp\", \"url\":\"http://192.168.0.230:8176\", \"iconAliasing\":\"automationIcons\" },\r\n# {\"type\":\"indigo\", \"name\":\"IndigoDown\", \"url\":\"http://192.168.0.231:8176\", \"iconAliasing\":\"automationIcons\"  },\r\n    {\"type\": \"domoticz\", \"name\": \"DomoticzUT\", \"url\": \"http://domoticzut:80\", \"iconAliasing\": \"automationIcons\"},\r\n    {\"type\": \"domoticz\", \"name\": \"DomoticzPLC\", \"url\": \"http://domoticzplc:80\", \"iconAliasing\": \"automationIcons\"},\r\n    {\"type\": \"domoticz\", \"name\": \"DomoticzCEL\", \"url\": \"http://domoticzcel:80\", \"iconAliasing\": \"automationIcons\"},\r\n    {\"type\": \"domoticz\", \"name\": \"DomoticzOFF\", \"url\": \"http://domoticzoff:80\", \"iconAliasing\": \"automationIcons\"},\r\n    {\"type\": \"domoticz\", \"name\": \"DomoticzKIT\", \"url\": \"http://calprinter:80\", \"iconAliasing\": \"automationIcons\"},\r\n# {\"type\":\"domoticz\", \"name\":\"DomoticzOFI\", \"url\":\"http://192.168.0.235:80\", \"iconAliasing\":\"automationIcons\"  },\r\n# {\"type\":\"indigo-test\", \"name\":\"IndigoTest\", \"url\":\"\", \"iconAliasing\":\"automationIcons\"  },\r\n# {\"type\":\"fibaro\", \"name\":\"FibaroHS2\", \"url\":\"http://macallan:5079\" },\r\n# {\"type\":\"vera\", \"name\":\"Vera\", \"url\":\"http://192.168.0.206:3480\" },\r\n# {\"type\":\"intermediate\", \"name\":\"intermediate\", \"url\":\"http://macallan:5000\" },\r\n  ]\r\n\r\nsendConfigToConfigServer = (deviceConfig, configsToSet, favourites) ->\r\n# Send to the config server\r\n  configUrl = configServerSaveURL + deviceConfig['deviceName']\r\n  options =\r\n    uri: configUrl\r\n    method: 'POST'\r\n    json: true\r\n    headers: {\"content-type\": \"application/json\"}\r\n    body: deviceConfig\r\n  console.log(\"Sending config for \" + deviceConfig['deviceName'])\r\n  request options, (error, response, body) ->\r\n    if error?\r\n      console.error \"Failed to post data to \" + configUrl + \", err: \" + error\r\n    else\r\n      console.info \"Config for \" + deviceConfig['deviceName'] + \"sent to \" + configUrl\r\n    return\r\n  return\r\n\r\n#\t\"/home/nodeuser/config/\" + deviceConfig['deviceName'] + \".json\";\r\n#\r\n#\tconfigDb.collection('TabletConfig').findOne { 'deviceName': deviceConfig['deviceName'] },\r\n#\t\t(err, doc) ->\r\n#\t\t\t# console.log(\"current doc \" + JSON.stringify(doc))\r\n#\t\t\t# Get favourites - use current database unless not there\r\n#\t\t\tcurFavourites = []\r\n#\t\t\tif (not replaceFavs) and doc? and doc.favourites? and doc.favourites.length isnt 0\r\n#\t\t\t\t# De-duplicate\r\n#\t\t\t\tcurFavourites.push fav for fav in doc.favourites when fav not in curFavourites\r\n#\r\n#\t\t\t# Debug code\r\n#\t\t\t# if deviceConfig['deviceName'] is \"tabmasterbed\"\r\n#\t\t\t# \tfor fav in curFavourites\r\n#\t\t\t# \t\tconsole.log \"tab \" + deviceConfig['deviceName'] + \" curdbFavourite \" + JSON.stringify(fav)\r\n#\t\t\t# \tfor fav in deviceConfig[\"favourites\"]\r\n#\t\t\t# \t\tconsole.log \"tab \" + deviceConfig['deviceName'] + \" fileFavourite \" + JSON.stringify(fav)\r\n#\r\n#\t\t\tif curFavourites.length > 0\r\n#\t\t\t\tdeviceConfig[\"favourites\"] = curFavourites\r\n#\t\t\t# Merge favourites - adding only distinct ones - no longer doing this way\r\n#\t\t\t# favsToAdd = []\r\n#\t\t\t# for curFav in curFavourites\r\n#\t\t\t# \taddThis = true\r\n#\t\t\t# \tfor newFav in deviceConfig[\"favourites\"]\r\n#\t\t\t# \t\tif curFav.tileName is newFav.tileName and curFav.groupName is newFav.groupName\r\n#\t\t\t# \t\t\taddThis = false\r\n#\t\t\t# \t\t\tbreak\r\n#\t\t\t# \tif addThis\r\n#\t\t\t# \t\tfavsToAdd.push curFav\r\n#\t\t\t# for fav in favsToAdd\r\n#\t\t\t# \tdeviceConfig[\"favourites\"].push fav\r\n#\r\n#\t\t\t# Debug code\r\n#\t\t\t# if deviceConfig['deviceName'] is \"tabmasterbed\"\r\n#\t\t\t# \tfor fav in deviceConfig[\"favourites\"]\r\n#\t\t\t# \t\tconsole.log \"tab \" + deviceConfig['deviceName'] + \" finalFavourite \" + JSON.stringify(fav)\r\n#\r\n#\t\t\t# Set the new config\r\n#\t\t\tconfigsToSet.count++\r\n#\t\t\t# console.log \"++ \" + configsToSet.count\r\n#\t\t\tconfigDb.collection('TabletConfig').update { 'deviceName': deviceConfig['deviceName'] },\r\n#\t\t\t\tdeviceConfig, {upsert:true}, (err, numberOfRemovedDocs) ->\r\n#\t\t\t\t\tif err isnt null\r\n#\t\t\t\t\t\tconsole.log 'Failed to save new info ' + err\r\n#\t\t\t\t\t\tconfigDb.close()\r\n#\t\t\t\t\t\tprocess.exit 1\r\n#\t\t\t\t\telse\r\n#\t\t\t\t\t\tconfigsToSet.count--\r\n#\t\t\t\t\t\t# console.log \"-- \" + configsToSet.count\r\n#\t\t\t\t\t\tif configsToSet.count is 0\r\n#\t\t\t\t\t\t\tconsole.log 'All config set'\r\n#\t\t\t\t\t\t\tconfigDb.close()\r\n#\t\t\t\t\t\t\tprocess.exit 1\r\n#\t\t\t\t\treturn\r\n#\t\t\treturn\r\n#\treturn\r\n\r\n\r\n# Config server URL\r\nconfigServerSaveURL = \"http://domoticzoff:5076/tabletconfig/\"\r\n#configServerSaveURL = \"http://localhost:5076/tabletconfig/\"\r\n\r\n# Devices info master\r\ndevicesInfoMasterSource = \"//domoticzoff/PiShare/nodeuser/config/MasterDevices.json\"\r\ndevicesInfoMasterStr = fs.readFileSync(devicesInfoMasterSource, encoding: 'utf8')\r\ndevicesInfoMaster = JSON.parse(devicesInfoMasterStr)\r\n\r\n# Check for override current favourites from files\r\nreplaceFavs = false\r\nif process.argv[2]? and process.argv[2] is \"-replacefavs\" or process.argv[3]? and process.argv[3] is \"-replacefavs\"\r\n  replaceFavs = true\r\n\r\n# Sonos Server URL\r\nsonosServerUrl = devicesInfoMaster.devices.sonosServer.url\r\nconsole.log(\"SonosServer is \" + sonosServerUrl)\r\n\r\n# Calendar and energy servers\r\ncalendarServerUrl = devicesInfoMaster.devices.calendarServer.url\r\nenergyServerUrl = devicesInfoMaster.devices.energyServer.url\r\nconsole.log(\"CalendarServer is \" + calendarServerUrl)\r\nconsole.log(\"EnergyServer is \" + energyServerUrl)\r\n\r\n# Blinds\r\nofficeBlindsHostname = devicesInfoMaster.devices.officeBlinds.hostname\r\ngamesRoomBlindsHostname = devicesInfoMaster.devices.gamesRoomBlinds.hostname\r\nlandingBathBlindsHostname = devicesInfoMaster.devices.landingBathBlinds.hostname\r\nconsole.log(\"OfficeBlinds is \" + officeBlindsHostname)\r\nconsole.log(\"Games Room Blinds is \" + gamesRoomBlindsHostname)\r\nconsole.log(\"Landing Bath Blinds is \" + landingBathBlindsHostname)\r\n\r\n# Front Door Lock\r\nfrontDoorLockHostname = devicesInfoMaster.devices.frontDoorLock.hostname\r\nfrontDoorLockUserNum = devicesInfoMaster.devices.frontDoorLock.userNum\r\nfrontDoorLockUserPin = devicesInfoMaster.devices.frontDoorLock.userPin\r\nconsole.log(\"Front Door is \" + frontDoorLockHostname)\r\n\r\nreplaceAll = (find, replace, str) ->\r\n  str.replace new RegExp(find, 'g'), replace\r\n\r\nconsole.log 'Setting Tablet Configuration from folder'\r\nconsole.log __dirname + '/tablets'\r\nconsole.log()\r\n\r\nconfigsToSet = {count: 0}\r\n# Get the default config\r\ndefaultTabletConfig = new DefaultTabletConfig()\r\nconfigSettingsToGet =\r\n  showCalServerButton: true\r\n  showEnergyServerButton: true\r\n  calServerUrl: calendarServerUrl + \"/calendar/min/45\"\r\n  energyServerUrl: energyServerUrl\r\ncommonConfig = defaultTabletConfig.get(configSettingsToGet)\r\n# Get the list of tablets from the configuration\r\ndeviceConfigList = getDeviceConfigList()\r\n# Get Sonos/Blinds/Door configs\r\ndoorActions = getDoorActions()\r\nsonosConfig = getSonosConfig(deviceConfigList)\r\nblindsActions = getBlindsActions()\r\n# Add blinds and sonos actions to common config\r\nfor dAction in doorActions\r\n  commonConfig.common.fixedActions.push dAction\r\nfor bAction in blindsActions\r\n  commonConfig.common.fixedActions.push bAction\r\nfor sAction in sonosConfig\r\n  commonConfig.common.fixedActions.push sAction\r\n# Go through tablets (devices) that have config info\r\nfor devConf in deviceConfigList\r\n# Add in the favourites and other info like tablet name\r\n  newConfig = {}\r\n  for key,val of devConf\r\n    newConfig[key] = val\r\n  # Set the common configuration for all tablets\r\n  newConfig[\"common\"] = commonConfig.common\r\n  newConfig.common[\"servers\"] = getServerList()\r\n  sendConfigToConfigServer newConfig, configsToSet, devConf.favourites\r\n"
  ]
}