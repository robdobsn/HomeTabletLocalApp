// Generated by CoffeeScript 1.8.0
var TabletConfig;

TabletConfig = (function() {
  function TabletConfig(configURL, defaultTabletName) {
    this.configURL = configURL;
    this.defaultTabletName = defaultTabletName;
    this.configData = {};
    return;
  }

  TabletConfig.prototype.getTabName = function() {
    var tabName;
    tabName = LocalStorage.get("DeviceConfigName");
    if (tabName == null) {
      tabName = this.defaultTabletName;
    }
    return tabName;
  };

  TabletConfig.prototype.getReqUrl = function() {
    var reqURL, tabName;
    reqURL = this.configURL;
    tabName = this.getTabName();
    if (tabName != null) {
      reqURL = reqURL + "/" + tabName;
    }
    return reqURL;
  };

  TabletConfig.prototype.setReadyCallback = function(readyCallback) {
    this.readyCallback = readyCallback;
  };

  TabletConfig.prototype.getConfigData = function() {
    return this.configData;
  };

  TabletConfig.prototype.addFavouriteButton = function(buttonInfo) {
    console.log("Add " + buttonInfo.tileName);
    if (!("favourites" in this.configData)) {
      this.configData.favourites = [];
    }
    this.configData.favourites.push({
      tileName: buttonInfo.tileName,
      groupName: buttonInfo.groupName
    });
    return this.saveDeviceConfig();
  };

  TabletConfig.prototype.deleteFavouriteButton = function(buttonInfo) {
    var fav, favIdx, idx, _i, _len, _ref;
    console.log("Delete " + buttonInfo.tileName);
    if (!("favourites" in this.configData)) {
      return;
    }
    favIdx = -1;
    _ref = this.configData.favourites;
    for (idx = _i = 0, _len = _ref.length; _i < _len; idx = ++_i) {
      fav = _ref[idx];
      if (fav.tileName === buttonInfo.tileName && fav.groupName === buttonInfo.groupName) {
        favIdx = idx;
        break;
      }
    }
    if (favIdx >= 0) {
      this.configData.favourites.splice(favIdx, 1);
      return this.saveDeviceConfig();
    }
  };

  TabletConfig.prototype.saveDeviceConfig = function() {
    var reqURL, tabName;
    reqURL = this.getReqUrl();
    LocalStorage.set(reqURL, this.configData);
    tabName = this.getTabName();
    if ((tabName == null) || tabName === "") {
      console.log("Unable to save device config as tablet name unknown");
    } else {
      console.log("Saving device config for " + tabName);
    }
    console.log("NEED TO IMPLEMENT SAVING BACK TO SERVER " + reqURL);
    return $.ajax({
      url: reqURL,
      type: 'POST',
      data: JSON.stringify({
        "favourites": this.configData.favourites
      }),
      contentType: "application/json",
      success: (function(_this) {
        return function(data, status, response) {
          return console.log("Sent new config data ok");
        };
      })(this),
      error: (function(_this) {
        return function(jqXHR, textStatus, errorThrown) {
          return console.error("Failed to send new config data: " + textStatus + " " + errorThrown);
        };
      })(this)
    });
  };

  TabletConfig.prototype.requestConfig = function() {
    var reqURL, tabName;
    reqURL = this.getReqUrl();
    tabName = this.getTabName();
    console.log("Requesting tablet config with URL " + reqURL);
    $.ajax(reqURL, {
      type: "GET",
      dataType: "text",
      crossDomain: true,
      success: (function(_this) {
        return function(data, textStatus, jqXHR) {
          var curTabName, jsonData, jsonText;
          jsonText = jqXHR.responseText;
          jsonData = $.parseJSON(jsonText);
          tabName = jsonData["deviceName"];
          curTabName = LocalStorage.get("DeviceConfigName");
          if ((tabName != null) && tabName !== curTabName) {
            LocalStorage.set("DeviceConfigName", tabName);
            console.log("DeviceConfigName was " + curTabName + " now set to " + tabName);
            LocalStorage.logEvent("CnfLog", "DeviceConfigName was " + curTabName + " now set to " + tabName);
          }
          _this.configData = jsonData;
          LocalStorage.set(reqURL, _this.configData);
          _this.readyCallback();
        };
      })(this),
      error: (function(_this) {
        return function(jqXHR, textStatus, errorThrown) {
          var storedData;
          reqURL = "http://macallan:5076/tabletconfig/tablanding";
          storedData = LocalStorage.get(reqURL);
          console.log("Config Getting data stored for " + reqURL + " result = " + storedData);
          if (storedData != null) {
            console.log("Using stored data for " + reqURL);
            _this.configData = storedData;
          }
        };
      })(this)
    });
  };

  return TabletConfig;

})();
