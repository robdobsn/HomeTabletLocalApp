// Generated by CoffeeScript 1.10.0
(function() {
  App.FibaroServer = (function() {
    function FibaroServer(manager, serverDef, dataReadyCallback) {
      this.manager = manager;
      this.serverDef = serverDef;
      this.dataReadyCallback = dataReadyCallback;
      this.ROOMS_URL = this.serverDef.url + "/api/rooms";
      this.SCENES_URL = this.serverDef.url + "/api/scenes";
      return;
    }

    FibaroServer.prototype.setReadyCallback = function(dataReadyCallback) {
      this.dataReadyCallback = dataReadyCallback;
    };

    FibaroServer.prototype.reqActions = function() {
      console.log("Get from Fibaro " + this.ROOMS_URL);
      $.ajax(this.ROOMS_URL, {
        type: "GET",
        dataType: "json",
        crossDomain: true,
        error: (function(_this) {
          return function(jqXHR, textStatus, errorThrown) {
            console.log("Fibaro Rooms failed: " + textStatus + " " + errorThrown);
          };
        })(this),
        success: (function(_this) {
          return function(data, textStatus, jqXHR) {
            console.log("Got from Fibaro");
            _this.rooms = data;
            $.ajax(_this.SCENES_URL, {
              type: "GET",
              dataType: "json",
              crossDomain: true,
              success: function(data, textStatus, jqXHR) {
                _this.scenes = _this.getScenes(data, _this.rooms);
                _this.scenes.sort(_this.sortByRoomName);
                _this.dataReadyCallback(_this.serverDef.name, _this.scenes);
                console.log("Fibaro data = " + JSON.stringify(_this.scenes));
              }
            });
          };
        })(this)
      });
    };

    FibaroServer.prototype.makeBasicAuth = function(username, password) {
      var hash, tok;
      tok = username + ':' + password;
      hash = btoa(tok);
      return 'Basic ' + hash;
    };

    FibaroServer.prototype.sortByRoomName = function(a, b) {
      if (a.groupName < b.groupName) {
        return -1;
      }
      if (a.groupName > b.groupName) {
        return 1;
      }
      return 0;
    };

    FibaroServer.prototype.getScenes = function(data, rooms) {
      var fibaroScene, fibaroScenes, i, j, len, len1, room, scene, sceneCmd, scenes;
      fibaroScenes = data;
      scenes = [];
      for (i = 0, len = fibaroScenes.length; i < len; i++) {
        fibaroScene = fibaroScenes[i];
        if (!"roomID" in fibaroScene) {
          continue;
        }
        for (j = 0, len1 = rooms.length; j < len1; j++) {
          room = rooms[j];
          if (!(("id" in room) && ("name" in room))) {
            continue;
          }
          if (room.id === fibaroScene.roomID) {
            sceneCmd = this.serverDef.url + "/api/sceneControl?id=" + fibaroScene.id + "&action=start";
            scene = {
              actionNum: fibaroScene.id,
              actionName: fibaroScene.name,
              groupName: room.name,
              actionUrl: sceneCmd
            };
            scenes.push(scene);
            break;
          }
        }
      }
      return scenes;
    };

    return FibaroServer;

  })();

}).call(this);

//# sourceMappingURL=fibaro-server.js.map
