// Generated by CoffeeScript 1.8.0
var Tile;

Tile = (function() {
  function Tile(tileDef) {
    this.tileDef = tileDef;
    this.contentFontScaling = 1;
    this.buttonTextX = 10;
    return;
  }

  Tile.prototype.addToDoc = function() {
    this.tileId = "sqTile_" + this.tileDef.tierIdx + "_" + this.tileDef.groupIdx + "_" + this.tileIdx;
    $(this.tileDef.parentTag).append("<a class=\"sqTile\" id=\"" + this.tileId + "\" \n		href=\"javascript:void(0);\" \n		style=\"background-color:" + this.tileDef.tileColour + ";\n				display:block; opacity:1;\">\n  <div class=\"sqInner\" style=\"height:100%\">\n  </div>\n</a>");
    if (this.tileDef.clickFn != null) {
      $("#" + this.tileId).click((function(_this) {
        return function() {
          return _this.tileDef.clickFn(_this.tileDef);
        };
      })(this));
    }
    this.contents = $("#" + this.tileId + ">.sqInner");
  };

  Tile.prototype.distMoved = function(x1, y1, x2, y2) {
    var dist, xSep, ySep;
    xSep = x1 - x2;
    ySep = y1 - y2;
    dist = Math.sqrt((xSep * xSep) + (ySep * ySep));
    return dist;
  };

  Tile.prototype.removeFromDoc = function() {
    if (this.refreshId != null) {
      clearInterval(this.refreshId);
    }
    $('#' + this.tileId).remove();
  };

  Tile.prototype.setTileIndex = function(tileIdx) {
    this.tileIdx = tileIdx;
  };

  Tile.prototype.reposition = function(posX, posY, sizeX, sizeY, fontScaling) {
    var iconHeight, iconSel, textSel, txtHeight;
    this.posX = posX;
    this.posY = posY;
    this.sizeX = sizeX;
    this.sizeY = sizeY;
    this.fontScaling = fontScaling;
    this.setPositionCss('#' + this.tileId, this.posX, this.posY, this.sizeX, this.sizeY, this.fontScaling);
    iconSel = '#' + this.tileId + " .sqSceneButtonIcon img";
    iconHeight = this.sizeY / 2;
    this.setPositionCss(iconSel, 10, (this.sizeY - iconHeight) / 2, null, iconHeight);
    textSel = '#' + this.tileId + " .sqSceneButtonText";
    txtHeight = $(textSel).height();
    this.setPositionCss('#' + this.tileId + " .sqSceneButtonText", this.buttonTextX, (this.sizeY - txtHeight) / 2);
  };

  Tile.prototype.setPositionCss = function(selector, posX, posY, sizeX, sizeY, fontScaling) {
    var css;
    css = {
      "margin-left": posX + "px",
      "margin-top": posY + "px"
    };
    if (sizeX != null) {
      css["width"] = sizeX + "px";
    }
    if (sizeY != null) {
      css["height"] = sizeY + "px";
    }
    if (fontScaling != null) {
      css["font-size"] = (fontScaling * this.contentFontScaling) + "%";
    }
    $(selector).css(css);
  };

  Tile.prototype.setContentFontScaling = function(contentFontScaling) {
    this.contentFontScaling = contentFontScaling;
    this.setPositionCss(this.posX, this.posY, this.sizeX, this.sizeY, this.fontScaling);
  };

  Tile.prototype.getElement = function(element) {
    return $('#' + this.tileId + " " + element);
  };

  Tile.prototype.isVisible = function(isPortrait) {
    if (this.tileDef.visibility === "all") {
      return true;
    }
    if (this.tileDef.visibility === "portrait" && isPortrait) {
      return true;
    }
    if (this.tileDef.visibility === "landscape" && (!isPortrait)) {
      return true;
    }
    return false;
  };

  Tile.prototype.setInvisible = function() {
    $('#' + this.tileId).css({
      "display": "none"
    });
  };

  Tile.prototype.setRefreshInterval = function(intervalInSecs, callbackFn, firstCallNow) {
    this.callbackFn = callbackFn;
    if (firstCallNow) {
      this.callbackFn();
    }
    this.refreshId = setInterval((function(_this) {
      return function() {
        return _this.callbackFn();
      };
    })(this), intervalInSecs * 1000);
  };

  Tile.prototype.setIcon = function(iconName) {
    var iconUrl;
    if (iconName === "") {
      return;
    }
    iconUrl = 'img/' + iconName + '.png';
    if (iconUrl !== "") {
      $('#' + this.tileId + " .sqSceneButtonIcon").html("<img src=" + iconUrl + "></img>");
    }
  };

  Tile.prototype.setText = function(textStr) {
    this.textStr = textStr;
    $('#' + this.tileId + " .sqSceneButtonText").html(textStr);
  };

  return Tile;

})();
