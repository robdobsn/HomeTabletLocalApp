// Generated by CoffeeScript 1.10.0
(function() {
  App.Tile = (function() {
    function Tile(tileDef) {
      this.tileDef = tileDef;
      return;
    }

    Tile.prototype.handleAction = function(action) {
      return console.log("Action = " + action);
    };

    Tile.prototype.addToDoc = function() {
      this.tileId = "sqTile_" + this.tileDef.tierIdx + "_" + this.tileDef.groupIdx + "_" + this.tileIdx;
      $(this.tileDef.parentTag).append("<a class=\"sqTile\" id=\"" + this.tileId + "\" \n		href=\"javascript:void(0);\" \n		style=\"background-color:" + this.tileDef.tileColour + ";\n				display:block; opacity:1;\">\n  <div class=\"sqInner\" style=\"height:100%\">\n  </div>\n</a>");
      if ((this.tileDef.clickFn != null) && this.tileDef.clickFn !== "") {
        $("#" + this.tileId).click((function(_this) {
          return function(event) {
            event.stopPropagation();
            _this.tileDef.clickFn(_this.tileDef);
            return false;
          };
        })(this));
      }
      this.contents = $("#" + this.tileId + ">.sqInner");
    };

    Tile.prototype.distMoved = function(x1, y1, x2, y2) {
      var dist, xSep, ySep;
      xSep = x1 - x2;
      ySep = y1 - y2;
      dist = Math.sqrt((xSep * xSep) + (ySep * ySep));
      return dist;
    };

    Tile.prototype.removeFromDoc = function() {
      if (this.refreshId != null) {
        clearInterval(this.refreshId);
      }
      $('#' + this.tileId).remove();
    };

    Tile.prototype.setTileIndex = function(tileIdx) {
      this.tileIdx = tileIdx;
    };

    Tile.prototype.reposition = function(posX1, posY1, sizeX1, sizeY1) {
      this.posX = posX1;
      this.posY = posY1;
      this.sizeX = sizeX1;
      this.sizeY = sizeY1;
      this.setPositionCss('#' + this.tileId, this.posX, this.posY, this.sizeX, this.sizeY);
    };

    Tile.prototype.setPositionCss = function(selector, posX, posY, sizeX, sizeY) {
      var css;
      css = {
        "margin-left": posX + "px",
        "margin-top": posY + "px"
      };
      if (sizeX != null) {
        css["width"] = sizeX + "px";
      }
      if (sizeY != null) {
        css["height"] = sizeY + "px";
      }
      $(selector).css(css);
    };

    Tile.prototype.getElement = function(element) {
      return $('#' + this.tileId + " " + element);
    };

    Tile.prototype.isVisible = function(isPortrait) {
      if (this.tileDef.visibility === "all") {
        return true;
      }
      if (this.tileDef.visibility === "portrait" && isPortrait) {
        return true;
      }
      if (this.tileDef.visibility === "landscape" && (!isPortrait)) {
        return true;
      }
      return false;
    };

    Tile.prototype.setInvisible = function() {
      $('#' + this.tileId).css({
        "display": "none"
      });
    };

    Tile.prototype.setRefreshInterval = function(intervalInSecs, callbackFn, firstCallNow) {
      this.callbackFn = callbackFn;
      if (firstCallNow) {
        this.callbackFn();
      }
      this.refreshId = setInterval((function(_this) {
        return function() {
          return _this.callbackFn();
        };
      })(this), intervalInSecs * 1000);
    };

    return Tile;

  })();

}).call(this);

//# sourceMappingURL=tile.js.map
