// Generated by CoffeeScript 1.10.0
(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  App.TextEntryTile = (function(superClass) {
    extend(TextEntryTile, superClass);

    function TextEntryTile(tileDef) {
      TextEntryTile.__super__.constructor.call(this, tileDef);
      this.fontPixels = 30;
      this.leftMarginX = 10;
      this.stateVar = App.LocalStorage.get(tileDef.varName);
      return;
    }

    TextEntryTile.prototype.addToDoc = function(elemToAddTo) {
      var inputSel;
      TextEntryTile.__super__.addToDoc.call(this, elemToAddTo);
      this.contents.append("<span class=\"sqTextEntryLabel\" style=\"position:relative\"></span>\n<span><input class=\"sqTextEntryInput\" style=\"position:relative; \n	font-size: " + this.fontPixels + "px; type=\"text\"\"></input></span>");
      inputSel = '#' + this.tileId + " .sqTextEntryInput";
      $(inputSel).bind('input', (function(_this) {
        return function() {
          return App.LocalStorage.set(_this.tileDef.varName, $(inputSel).val());
        };
      })(this));
    };

    TextEntryTile.prototype.reposition = function(posX, posY, sizeX, sizeY) {
      var inputSel, labelSel, lblWidth, txtHeight;
      this.posX = posX;
      this.posY = posY;
      this.sizeX = sizeX;
      this.sizeY = sizeY;
      TextEntryTile.__super__.reposition.call(this, this.posX, this.posY, this.sizeX, this.sizeY);
      labelSel = '#' + this.tileId + " .sqTextEntryLabel";
      inputSel = '#' + this.tileId + " .sqTextEntryInput";
      $(labelSel).text(this.tileDef.label);
      $(inputSel).val(this.stateVar);
      $(labelSel).css({
        fontSize: this.fontPixels + "px"
      });
      $(inputSel).css({
        fontSize: this.fontPixels + "px"
      });
      txtHeight = $(inputSel).height();
      this.setPositionCss(labelSel, this.leftMarginX, (this.sizeY - txtHeight) / 2);
      lblWidth = $(labelSel).width();
      this.setPositionCss(inputSel, null, (this.sizeY - txtHeight) / 2, this.sizeX - lblWidth - 4 * this.leftMarginX);
    };

    return TextEntryTile;

  })(App.Tile);

}).call(this);

//# sourceMappingURL=text-entry-tile.js.map
