{
  "version": 3,
  "file": "automation-manager.js",
  "sourceRoot": "..\\..",
  "sources": [
    "www\\js\\automation-manager.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "class App.AutomationManager\r\n\tconstructor: (@app, @readyCallback) ->\r\n\t\t@serverDefs = []\r\n\t\t@servers = []\r\n\t\t@sumActions = {}\r\n\t\t@iconAliasing = {}\r\n\t\t@combinedActions = {}\r\n\r\n\tsetReadyCallback: (@readyCallback) ->\r\n\t\treturn\r\n\r\n\trequestUpdate: (configData) ->\r\n\t\t# Stash icon aliasing info\r\n\t\t@iconAliasing = if \"iconAliasing\" of configData.common then configData.common.iconAliasing else {}\r\n\t\t# Get actions from config data\r\n\t\tif \"fixedActions\" of configData.common\r\n\t\t\t@sumActions[\"fixedActions\"] = configData.common.fixedActions\r\n\t\telse\r\n\t\t\t@sumActions[\"fixedActions\"] = null\r\n\t\t# Check if server list has changed\r\n\t\tif \"servers\" of configData.common\r\n\t\t\tdataChanged = false\r\n\t\t\tif @serverDefs.length is configData.common.servers.length\r\n\t\t\t\tfor serverDef, idx in configData.common.servers\r\n\t\t\t\t\tif @serverDefs[idx].type isnt serverDef.type then dataChanged = true\r\n\t\t\t\t\tif @serverDefs[idx].name isnt serverDef.name then dataChanged = true\r\n\t\t\t\t\tif @serverDefs[idx].url isnt serverDef.url then dataChanged = true\r\n\t\t\telse\r\n\t\t\t\tdataChanged = true\r\n\t\t\t# If changed then create servers\r\n\t\t\tif dataChanged\r\n\t\t\t\t@servers = []\r\n\t\t\t\tfor serverDef in configData.common.servers\r\n\t\t\t\t\t# if serverDef.type is \"indigo\" or serverDef.type is \"Indigo\"\r\n\t\t\t\t\t# \t@servers.push new App.IndigoServer(this, serverDef, @actionsReadyCb)\r\n\t\t\t\t\t# else if serverDef.type is \"indigo-test\"\r\n\t\t\t\t\t# \t@servers.push new App.IndigoTestServer(this, serverDef, @actionsReadyCb)\r\n\t\t\t\t\t# else if serverDef.type is \"vera\" or serverDef.type is \"Vera\"\r\n\t\t\t\t\t# \t@servers.push new App.VeraServer(this, serverDef, @actionsReadyCb)\r\n\t\t\t\t\t# else if serverDef.type is \"fibaro\" or serverDef.type is \"Fibaro\"\r\n\t\t\t\t\t# \t@servers.push new App.FibaroServer(this, serverDef, @actionsReadyCb)\r\n\t\t\t\t\t# else if serverDef.type is \"domoticz\" or serverDef.type is \"Domoticz\"\r\n\t\t\t\t\t# \t@servers.push new App.DomoticzServer(this, serverDef, @actionsReadyCb)\r\n\t\t\t\t\t# else \r\n\t\t\t\t\tif serverDef.type is \"robhome\" or serverDef.type is \"RobHome\"\r\n\t\t\t\t\t\t@servers.push new App.RobHomeServer(this, serverDef, @actionsReadyCb)\r\n\t\telse\r\n\t\t\t@servers = []\r\n\t\t@serverDefs = configData.common.servers\r\n\t\t# Request data from servers\r\n\t\tfor server in @servers\r\n\t\t\tserver.reqActions()\r\n\t\t\tconsole.log \"automation-manager reqActions from server \" + server.ACTIONS_URI\r\n\t\t# Callback now with initial actions (fixed actions)\r\n\t\t@readyCallback(true)\r\n\t\treturn\r\n\r\n\tactionsReadyCb: (serverName, actions) =>\r\n\t\t# Check if the data for this action has changed\r\n\t\tdataChanged = true\r\n\t\tif serverName of @sumActions\r\n\t\t\tdataChanged = JSON.stringify(@sumActions[serverName]) isnt actions\r\n\t\tif dataChanged\r\n\t\t\t@sumActions[serverName] = actions\r\n\t\t# Process the data further to remove duplications (two servers might have the same action)\r\n\t\t# and convert these duplicates into separate action maintained by this object\r\n\t\t@combinedActions[\"actions\"] = @generateCombinedActions() \r\n\t\t@readyCallback(dataChanged)\r\n\t\treturn\r\n\r\n\tgetActionGroups: ->\r\n\t\treturn @combinedActions\r\n\r\n\tgenerateCombinedActions: () ->\r\n\t\t# Flatten all sources into an actions list\r\n\t\tmergedActionsList = []\r\n\t\tduplicatedActions = {}\r\n\t\t# Go through the actions of each server\r\n\t\tfor serverName, serverActions of @sumActions\r\n\t\t\tfor serverAction in serverActions\r\n\t\t\t\tdupFound = false\r\n\t\t\t\t# Check against other server's actions\r\n\t\t\t\tfor otherServerName, otherServerActions of @sumActions\r\n\t\t\t\t\tif otherServerName is serverName\r\n\t\t\t\t\t\tcontinue\r\n\t\t\t\t\tfor otherServerAction in otherServerActions\r\n\t\t\t\t\t\tif otherServerAction.actionName is serverAction.actionName and\r\n\t\t\t\t\t\t\t((not otherServerAction.groupName? and not serverAction.groupName?) or (otherServerAction.groupName is serverAction.groupName))\r\n\t\t\t\t\t\t\t\tif serverAction.actionName of duplicatedActions\r\n\t\t\t\t\t\t\t\t\tduplicatedActions[serverAction.actionName].actionUrl += \";\" + serverAction.actionUrl\r\n\t\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\t\tduplicatedActions[serverAction.actionName] = serverAction\r\n\t\t\t\t\t\t\t\tdupFound = true\r\n\t\t\t\t\t\t\t\tbreak\r\n\t\t\t\t\tif dupFound\r\n\t\t\t\t\t\tbreak\r\n\t\t\t\tif not dupFound\r\n\t\t\t\t\tmergedActionsList.push serverAction\r\n\t\tfor key,val of duplicatedActions\r\n\t\t\tmergedActionsList.push val\r\n\t\t\tconsole.error(\"MergedAction \" + val.actionUrl)\r\n\t\treturn mergedActionsList\r\n\r\n\tsoundResult: (cmdsToDo, cmdsCompleted, cmdsFailed) ->\r\n\t\tif cmdsCompleted is cmdsToDo\r\n\t\t\tif cmdsFailed is 0\r\n\t\t\t\t@app.mediaPlayHelper.play(\"ok\")\r\n\t\t\telse\r\n\t\t\t\t@app.mediaPlayHelper.play(\"fail\")\r\n\t\treturn\r\n\r\n\texecuteCommand: (cmdParams) =>\r\n\t\tif not cmdParams? or cmdParams is \"\" then return\r\n\t\t# Commands can be ; separated\r\n\t\tcmds = cmdParams.split(\";\")\r\n\t\t@app.mediaPlayHelper.play(\"click\")\r\n\t\tcmdsCompleted = 0\r\n\t\tcmdsFailed = 0\r\n\t\tcmdsToDo = cmds.length\r\n\t\tfor cmd in cmds\r\n\t\t\t# Check if command contains \"~POST~\" - to indicate POST rather than GET\r\n\t\t\tif cmd.indexOf(\"~POST~\") > 0\r\n\t\t\t\tconsole.log \"automation-manager Exec POST command \" + cmd\r\n\t\t\t\tcmdParts = cmd.split(\"~\")\r\n\t\t\t\t$.ajax cmdParts[0],\r\n\t\t\t\t\ttype: \"POST\"\r\n\t\t\t\t\tdataType: \"text\"\r\n\t\t\t\t\tdata: cmdParts[2]\r\n\t\t\t\t\tsuccess: (data, textStatus, jqXHR) =>\r\n\t\t\t\t\t\tcmdsCompleted++\r\n\t\t\t\t\t\t@soundResult(cmdsToDo, cmdsCompleted, cmdsFailed)\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\terror: (jqXHR, textStatus, errorThrown) =>\r\n\t\t\t\t\t\tconsole.error (\"automation-manager POST exec command failed: \" + textStatus + \" \" + errorThrown + \" COMMAND=\" + cmd)\r\n\t\t\t\t\t\tcmdsFailed++\r\n\t\t\t\t\t\tcmdsCompleted++\r\n\t\t\t\t\t\treturn\r\n\t\t\telse\r\n\t\t\t\tconsole.log \"automation-manager Exec GET command \" + cmd\r\n\t\t\t\t$.ajax cmd,\r\n\t\t\t\t\ttype: \"GET\"\r\n\t\t\t\t\tdataType: \"text\"\r\n\t\t\t\t\tsuccess: (data, textStatus, jqXHR) =>\r\n\t\t\t\t\t\tcmdsCompleted++\r\n\t\t\t\t\t\t@soundResult(cmdsToDo, cmdsCompleted, cmdsFailed)\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\terror: (jqXHR, textStatus, errorThrown) =>\r\n\t\t\t\t\t\tconsole.error (\"automation-manager GET exec command failed: \" + textStatus + \" \" + errorThrown + \" COMMAND=\" + cmd)\r\n\t\t\t\t\t\tcmdsFailed++\r\n\t\t\t\t\t\tcmdsCompleted++\r\n\t\t\t\t\t\treturn\r\n\t\treturn\r\n\r\n\tgetIconFromActionName: (actionName, aliasingGroup) ->\r\n\t\tif not aliasingGroup? then return \"\"\r\n\t\tif aliasingGroup not of @iconAliasing then return \"\"\r\n\t\taliases = @iconAliasing[aliasingGroup]\r\n\t\tfor aliasDef in aliases\r\n\t\t\tif actionName.match(aliasDef.regex)\r\n\t\t\t\treturn aliasDef.iconName\r\n\t\treturn \"\"\r\n"
  ]
}