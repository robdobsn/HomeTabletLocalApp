// Generated by CoffeeScript 1.12.7
(function() {
  App.LocalStorage = (function() {
    function LocalStorage() {}

    LocalStorage.get = function(key) {
      var item, rslt;
      rslt = null;
      if (window.Storage && window.JSON) {
        item = localStorage.getItem(key);
        if (item) {
          rslt = JSON.parse(item);
        }
      }
      return rslt;
    };

    LocalStorage.set = function(key, value) {
      if (window.Storage && window.JSON) {
        localStorage.setItem(key, JSON.stringify(value));
        return true;
      }
      return false;
    };

    LocalStorage.logEvent = function(logKey, eventText, timestamp) {
      var logData, now;
      now = new Date();
      timestamp = timestamp != null ? timestamp : now;
      console.log("WallTabletDebug LogEvent: " + logKey + " text " + eventText + " time " + timestamp);
      logData = this.get(logKey);
      if (logData != null) {
        while (logData.length > 100) {
          logData.shift();
        }
      } else {
        logData = [];
      }
      logData.push({
        timestamp: timestamp,
        eventText: eventText
      });
      this.set(logKey, logData);
    };

    LocalStorage.formatDate = function(d) {
      return d.getFullYear() + "/" + this.padZero(d.getMonth() + 1, 2) + "/" + this.padZero(d.getDate(), 2) + " " + this.padZero(d.getHours(), 2) + ":" + this.padZero(d.getMinutes(), 2) + ":" + this.padZero(d.getSeconds(), 2);
    };

    LocalStorage.padZero = function(val, zeroes) {
      return ("00000000" + val).slice(-zeroes);
    };

    LocalStorage.getEventsText = function(logKey) {
      var ev, i, len, logData, outStr;
      logData = this.get(logKey);
      if (logData == null) {
        return "";
      }
      outStr = "";
      for (i = 0, len = logData.length; i < len; i++) {
        ev = logData[i];
        outStr += ev.timestamp + " " + ev.eventText + "\n";
      }
      return outStr;
    };

    LocalStorage.getEvent = function(logKey) {
      var logData, retEv;
      logData = this.get(logKey);
      if (logData == null) {
        return null;
      }
      if (logData.length <= 0) {
        return null;
      }
      retEv = logData.shift();
      this.set(logKey, logData);
      return retEv;
    };

    return LocalStorage;

  })();

}).call(this);

//# sourceMappingURL=local-storage.js.map
