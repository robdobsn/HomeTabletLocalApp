{
  "version": 3,
  "file": "wall-tab-app.js",
  "sourceRoot": "../../",
  "sources": [
    "www/js/wall-tab-app.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "class App.WallTabApp\r\n    constructor: ->\r\n\r\n        @VERSION = \"2.2.0\"\r\n\r\n        console.log \"wall-tab-app APPLICATION STARTING UP \" + @VERSION\r\n\r\n        # Default the tablet name and get the configuration server\r\n        @defaultTabletName = \"tabhall\"\r\n        @defaultConfigServerUrl = \"http://192.168.86.247:5076\"\r\n\r\n        # Basic settings\r\n        @hoursBetweenActionUpdates = 12\r\n        @minsBetweenEventLogChecks = 1\r\n        @maxEventsPerLogSend = 50\r\n        # Helper for playing media files\r\n        @mediaPlayHelper = new App.MediaPlayHelper(\r\n            {\r\n                \"click\": \"assets/click.mp3\",\r\n                \"ok\": \"assets/ok.mp3\",\r\n                \"fail\": \"assets/fail-wah.mp3\"\r\n            })\r\n        @tileColours = new App.TileColours\r\n        return\r\n\r\n    getConfigServerUrl: ->\r\n        configUrl = App.LocalStorage.get(\"ConfigServerUrl\")\r\n        if !(configUrl?) || (configUrl.length == 0)\r\n            console.log(\"wall-tab-app App.getConfigServerUrl from localstorage empty so using \" + @defaultConfigServerUrl)\r\n            configUrl = @defaultConfigServerUrl\r\n        return configUrl\r\n\r\n    getLogServerUrl: ->\r\n        return @getConfigServerUrl() + \"/log\"\r\n\r\n    go: ->\r\n        # Goes back to home display after user idle timeout\r\n        @userIdleCatcher = new App.UserIdleCatcher(90, @actionOnUserIdle, this)\r\n\r\n        # Tablet config is based on the name or IP address of the tablet\r\n        @tabletConfigManager = new App.TabletConfigManager(@defaultTabletName, @defaultConfigServerUrl)\r\n        @tabletConfigManager.setReadyCallback(@tabletConfigReadyCb)\r\n\r\n        # App updater\r\n        @appUpdater = new App.AppUpdater(this, @getConfigServerUrl() + \"/deployota/WallTabletApp\")\r\n\r\n        # Automation manager handles communicaton with automaion devices like\r\n        # Indigo/vera/fibaro\r\n        @automationManager = new App.AutomationManager(this, @automationManagerReadyCb)\r\n\r\n        # Calendar server communications\r\n        @calendarManager = new App.CalendarManager(this)\r\n\r\n        # App Pages\r\n        @appPages = new App.AppPages(this, \"#sqWrapper\", @automationManager, @VERSION)\r\n\r\n        # Handler for orientation change\r\n        $(window).on 'orientationchange', =>\r\n          @buildAndDisplayUI()\r\n\r\n        # And resize event\r\n        $(window).on 'resize', =>\r\n          @buildAndDisplayUI()\r\n\r\n        # Check event logs frequently\r\n        @checkEventLogs()\r\n        setInterval =>\r\n            @checkEventLogs()\r\n        , (@minsBetweenEventLogChecks * 60 * 1000)\r\n\r\n        # Make initial requests for action (scene) data and config data and repeat requests at intervals\r\n        @requestConfigData()\r\n        setInterval =>\r\n            @requestConfigData()\r\n        , (@hoursBetweenActionUpdates * 60 * 60 * 1000)\r\n        return\r\n\r\n    requestConfigData: ->\r\n        # Request tablet configuration from config server\r\n        return @tabletConfigManager.requestConfig()\r\n\r\n    tabletConfigReadyCb: =>\r\n        # Configuration data is available\r\n        configData = @tabletConfigManager.getConfigData()\r\n        if configData.common? and configData.common.calendar?\r\n            @calendarManager.setConfig(configData.common.calendar)\r\n        @automationManager.requestUpdate(configData)\r\n        return\r\n\r\n    automationManagerReadyCb: (hasChanged) =>\r\n        # Automation server data is available\r\n        if hasChanged\r\n            @buildAndDisplayUI()\r\n        return\r\n\r\n    buildAndDisplayUI: ->\r\n        @appPages.build(@automationManager.getActionGroups())\r\n        @appPages.display()\r\n        return\r\n\r\n    actionOnUserIdle: (appObject) ->\r\n        console.log \"wall-tab-app actionOnUserIdle @appPages \" + appObject\r\n        appObject.appPages.userIsIdle()\r\n        return\r\n\r\n    checkEventLogs: ->\r\n        evList = []\r\n        logCats = [\"CalLog\", \"IndLog\", \"CnfLog\"]\r\n        for logCat in logCats\r\n            for i in [0...@maxEventsPerLogSend]\r\n                ev = App.LocalStorage.getEvent(logCat)\r\n                if ev?\r\n                    console.log \"wall-tab-app Logging event from \" + logCat + \" = \" + JSON.stringify(ev)\r\n                    evList.push\r\n                        logCat: logCat\r\n                        timestamp: ev.timestamp\r\n                        eventText: ev.eventText\r\n                else\r\n                    break\r\n        if evList.length > 0\r\n            evListJson = JSON.stringify(evList)\r\n            console.log \"wall-tab-app Sending \" + evList.length + \" log event(s) to log server\"\r\n            $.ajax \r\n                url: @getLogServerUrl()\r\n                type: 'POST'\r\n                data: evListJson\r\n                contentType: \"application/json\"\r\n                success: (data, status, response) =>\r\n                    console.log \"wall-tab-app logged events success\"\r\n                    return\r\n                error: (jqXHR, textStatus, errorThrown) =>\r\n                    console.log (\"wall-tab-app Error log failed: \" + textStatus + \" \" + errorThrown)\r\n                    # If logging failed then re-log the events\r\n                    for ev in evList\r\n                        App.LocalStorage.logEvent(ev.logCat, ev.eventText, ev.timestamp)\r\n                    return\r\n        return\r\n\r\n    appUpdate: ->\r\n        console.log (\"wall-tab-app App update requested\")\r\n        @appUpdater.appUpdate()\r\n        return\r\n\r\n"
  ]
}