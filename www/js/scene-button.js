// Generated by CoffeeScript 1.8.0
var SceneButton,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

SceneButton = (function(_super) {
  __extends(SceneButton, _super);

  function SceneButton(tileDef) {
    SceneButton.__super__.constructor.call(this, tileDef);
    return;
  }

  SceneButton.prototype.addToDoc = function(elemToAddTo) {
    var iconName;
    SceneButton.__super__.addToDoc.call(this);
    this.contents.append("<div class=\"sqSceneButtonIcon\" style=\"position:absolute\"></div>\n<div class=\"sqSceneButtonText\" style=\"position:absolute\"></div>");
    iconName = this.tileDef.iconName;
    if (iconName === null) {
      iconName = "";
    }
    this.setIcon(iconName);
    this.setText(this.tileDef.tileText);
  };

  SceneButton.prototype.reposition = function(posX, posY, sizeX, sizeY, fontScaling) {
    var iconHeight, iconSel, iconWidth, iconX, textSel, txtHeight;
    this.posX = posX;
    this.posY = posY;
    this.sizeX = sizeX;
    this.sizeY = sizeY;
    this.fontScaling = fontScaling;
    SceneButton.__super__.reposition.call(this, posX, posY, sizeX, sizeY, fontScaling);
    iconSel = '#' + this.tileId + " .sqSceneButtonIcon";
    iconHeight = this.sizeY / 2;
    iconWidth = iconHeight * this.iconSize[0] / this.iconSize[1];
    iconX = this.tileDef.iconX === "centre" ? (this.sizeX - iconWidth) / 2 : this.buttonMarginX;
    this.setPositionCss(iconSel, iconX, (this.sizeY - iconHeight) / 2, iconWidth, iconHeight);
    textSel = '#' + this.tileId + " .sqSceneButtonText";
    txtHeight = $(textSel).height();
    this.setPositionCss(textSel, iconX + this.buttonMarginX + iconWidth, (this.sizeY - txtHeight) / 2, this.sizeX - iconWidth - 2 * this.buttonMarginX);
  };

  return SceneButton;

})(Tile);
