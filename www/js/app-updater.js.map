{
  "version": 3,
  "file": "app-updater.js",
  "sourceRoot": "../../",
  "sources": [
    "www/js/app-updater.coffee"
  ],
  "names": [],
  "mappings": ";AAAA;EAAM,GAAG,CAAC,aAAV,MAAA,WAAA;IACI,WAAa,IAAA,WAAA,CAAA;MAAC,IAAC,CAAA;MAAK,IAAC,CAAA;MACjB,OAAO,CAAC,GAAR,CAAY,cAAA,GAAiB,IAAC,CAAA,SAA9B;IADS;;IAGb,SAAW,CAAA,CAAA;MACP,OAAO,CAAC,GAAR,CAAY,gBAAZ;aACA,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,aAAzB,CAAuC;QACnC,MAAA,EAAQ,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,WADE;;QAGnC,GAAA,EAAK,+DAH8B;;;;;;;;MAAA,CAAvC,EAYI,QAAA,CAAA,CAAA,EAAA,CAZJ,EAaI,QAAA,CAAA,CAAA;eAAM,KAAA,CAAM,uCAAN;MAAN,CAbJ;IAFO;;EAJf;;EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA",
  "sourcesContent": [
    "class App.AppUpdater\r\n    constructor: (@app, @updateURL)->\r\n        console.log \"Updater set \" + @updateURL\r\n\r\n    appUpdate: ->\r\n        console.log \"Use web update\"\r\n        window.plugins.webintent.startActivity({\r\n            action: window.plugins.webintent.ACTION_VIEW,\r\n            # url: @updateURL + \"/WallTabletApp.apk\",\r\n            url: \"http://192.168.86.247:5076/deployota/WallTabletApp/index.html\",\r\n            # url: \"\"\r\n            # url: e.target.localURL,\r\n            # url: 'geo:0,0?q=8 Dick Place, EH9 2JL',\r\n            # url: 'cdvfile://localhost/persistent/WallTabletApp.apk', \r\n            # url: 'file://localhost/persistent/WallTabletApp.apk', \r\n            # url: 'file://storage/emulated/0/WallTabletApp.apk',\r\n            # type: 'application/vnd.android.package-archive'\r\n            }\r\n            () -> ,\r\n            () -> alert('Failed to open URL via Android Intent')\r\n            )\r\n\r\n    #     console.log \"appUpdate\"\r\n    #     $.ajax \r\n    #         url: @updateURL + \"/WallTabletApp/vers.json\"\r\n    #         type: 'GET'\r\n    #         contentType: \"application/json\"\r\n    #         success: (data, status, response) =>\r\n    #             console.log \"appUpdate got response \" + JSON.stringify(data)\r\n    #             if @app.VERSION < data.version\r\n    #                 console.log \"appUpdate required\"\r\n    #                 @performUpdate(@updateURL + \"/WallTabletApp/\" + data.filename)\r\n    #             else\r\n    #                 console.log \"appUpdate not required\"\r\n    #             return\r\n    #         error: (jqXHR, textStatus, errorThrown) =>\r\n    #             console.log \"appUpdate get vers.json failed: \" + textStatus + \" \" + errorThrown\r\n    #             return\r\n\r\n    # performUpdate: (@appFileDownloadURL) ->\r\n    #     console.log \"performUpdate\"\r\n    #     window.requestFileSystem LocalFileSystem.PERSISTENT, 0, (fileSystem) =>\r\n    #         @downloadFile fileSystem\r\n    #         # apkFile = 'download/'\r\n    #         # permissions = cordova.plugins.permissions\r\n    #         # permissions.hasPermission permissions.WRITE_EXTERNAL_STORAGE, ((status) ->\r\n    #         #     if !status.hasPermission\r\n    #         #         errorCallback = ->\r\n    #         #             alert 'Error: app requires storage permission'\r\n    #         #             if callBack and callBack != null\r\n    #         #                 callBack()\r\n    #         #             return\r\n    #         #         permissions.requestPermission permissions.WRITE_EXTERNAL_STORAGE, ((status) ->\r\n    #         #             if !status.hasPermission\r\n    #         #                 errorCallback()\r\n    #         #             else\r\n    #         #                 @downloadFile fileSystem\r\n    #         #             return\r\n    #         #         ), errorCallback\r\n    #         #     else\r\n    #         #         @downloadFile fileSystem\r\n    #         #         return\r\n    #         # )\r\n    #         , null,\r\n    #         (evt) ->\r\n    #             alert 'Error preparing to download the latest updates! - Err - ' + evt.target.error.code\r\n    #             if callBack and callBack != null\r\n    #                 callBack()\r\n    #             return\r\n\r\n    # downloadFile: (fileSystem) ->\r\n    #     localPath = fileSystem.root.toURL() + 'download/WallTabletApp.apk'\r\n\r\n    #     console.log(\"Download file from URL \" + @appFileDownloadURL)\r\n\r\n    #     xhr = new XMLHttpRequest()\r\n    #     xhr.open 'GET', @appFileDownloadURL, true\r\n    #     xhr.responseType = 'blob'\r\n    #     xhr.onload = () =>\r\n    #         console.log(\"File download status \" + xhr.status)\r\n    #         if xhr.status == 200\r\n    #             console.log(\"Got file\")\r\n    #             blob = new Blob([this.response], { type: 'application/vnd.android.package-archive' })\r\n    #             @doSaveFile(fileSystem.root, blob, \"WallTabletApp.apk\")\r\n    #     xhr.send()\r\n\r\n    #     # fileTransfer = new FileTransfer\r\n    #     # fileTransfer.download @appFileDownloadURL, localPath, (entry) ->\r\n    #     #     window.plugins.webintent.startActivity (\r\n    #     #         {\r\n    #     #             action: window.plugins.webintent.ACTION_VIEW\r\n    #     #             url: localPath\r\n    #     #             type: 'application/vnd.android.package-archive'\r\n    #     #         }\r\n    #     #         () -> \r\n    #     #             console.log(\"download started\")\r\n    #     #             return\r\n    #     #         (e) ->\r\n    #     #             alert 'Failed to update the app!'\r\n    #     #             if callBack and callBack != null\r\n    #     #                 callBack()\r\n    #     #             return\r\n    #     #     ),\r\n    #     #     (error) ->\r\n    #     #         alert 'Error downloading the latest updates! - error: ' + JSON.stringify(error)\r\n    #     #         if callBack and callBack != null\r\n    #     #             callBack()\r\n    #     #         return\r\n\r\n    # doSaveFile: (dirEntry, fileData, fileName) ->\r\n    #     console.log(\"Save file \" + fileName)\r\n    #     dirEntry.getFile fileName, { create: true, exclusive: false }, (fileEntry) =>\r\n    #         @writeFile(fileEntry, fileData);\r\n    #     , @onErrorCreateFile\r\n\r\n    # onErrorCreateFile: (e) ->\r\n    #     console.log(\"Failed to create file \" + e)\r\n\r\n    # writeFile: (fileEntry, dataObj, isAppend) ->\r\n    #     # Create a FileWriter object for our FileEntry (log.txt).\r\n    #     fileEntry.createWriter (fileWriter) =>\r\n    #         # fileWriter.onwriteend = () ->\r\n    #         #     console.log(\"Successful file write...\")\r\n    #         #     if dataObj.type == \"application/vnd.android.package-archive\"\r\n    #         #         readBinaryFile(fileEntry);\r\n    #         #     else\r\n    #         #         readFile(fileEntry);\r\n    #         fileWriter.onerror = (e) ->\r\n    #             console.log(\"Failed file write: \" + e.toString())\r\n\r\n    #         fileWriter.onwriteend = (e) =>\r\n    #             console.log('Write completed filename ' + e.target.localURL)\r\n    #             # window.plugins.webintent.startActivity (\r\n    #             #     {\r\n    #             #         action: window.plugins.webintent.ACTION_VIEW\r\n    #             #         url: e.target.localURL\r\n    #             #         type: 'application/vnd.android.package-archive'\r\n    #             #     }\r\n    #             #     (e) -> \r\n    #             #         console.log(\"success\")\r\n    #             #         return\r\n    #             #     (e) ->\r\n    #             #         console.log 'Failed to update the app!'\r\n    #             #         # if callBack and callBack != null\r\n    #             #         #     callBack()\r\n    #             #         # return\r\n    #             # )\r\n    #             @checkIfFileExists(e.target.localURL)\r\n    #             @checkIfFileExists('cdvfile://localhost/persistent/WallTabletApp.apk')\r\n    #             @checkIfFileExists('file://localhost/persistent/WallTabletApp.apk')\r\n    #             @checkIfFileExists('file://storage/emulated/0/WallTabletApp.apk')\r\n\r\n    #             window.plugins.webintent.startActivity({\r\n    #                 action: window.plugins.webintent.ACTION_VIEW,\r\n    #                 url: e.target.localURL,\r\n    #                 # url: 'geo:0,0?q=8 Dick Place, EH9 2JL',\r\n    #                 # url: 'cdvfile://localhost/persistent/WallTabletApp.apk', \r\n    #                 # url: 'file://localhost/persistent/WallTabletApp.apk', \r\n    #                 # url: 'file://storage/emulated/0/WallTabletApp.apk',\r\n    #                 type: 'application/vnd.android.package-archive'}\r\n    #                 () -> ,\r\n    #                 () -> alert('Failed to open URL via Android Intent')\r\n    #                 )\r\n    #         fileWriter.write(dataObj)\r\n\r\n    # checkIfFileExists: (@path) ->\r\n    #     window.requestFileSystem(LocalFileSystem.PERSISTENT, 0, (fileSystem) =>\r\n    #         fileSystem.root.getFile(path, { create: false }, @fileExists, @fileDoesNotExist)\r\n    #     , @getFSFail)\r\n\r\n    # fileExists: (fileEntry) ->\r\n    #     alert(\"File \" + fileEntry.fullPath + \" exists!\")\r\n\r\n    # fileDoesNotExist: () =>\r\n    #     alert(\"file does not exist\" + @path);\r\n\r\n    # getFSFail: (evt) ->\r\n    #     console.log(evt.target.error.code)\r\n\r\n\r\n\r\n\r\n"
  ]
}