// Generated by CoffeeScript 1.6.3
var TestWallTabApp,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

TestWallTabApp = (function() {
  function TestWallTabApp() {
    this.actionOnUserIdle = __bind(this.actionOnUserIdle, this);
    this.tileColours = new TileColours;
  }

  TestWallTabApp.prototype.go = function() {
    var mainTier, secondTier,
      _this = this;
    $("body").append("<div id=\"sqWrapper\">\n</div>");
    this.tileTiers = new TileTiers("#sqWrapper");
    mainTier = new TileTier("#sqWrapper", "_Tier1");
    mainTier.addToDom();
    this.tileTiers.addTier(mainTier);
    this.favouritesTierIdx = 0;
    this.favouritesGroupIdx = this.tileTiers.addGroup(this.favouritesTierIdx, "Home");
    this.calendarTierIdx = 0;
    this.calendarGroupIdx = this.tileTiers.addGroup(this.calendarTierIdx, "Calendar");
    this.sceneTierIdx = 0;
    this.sceneGroupIdx = this.tileTiers.addGroup(this.sceneTierIdx, "Scenes");
    secondTier = new TileTier("#sqWrapper", "_Tier2");
    secondTier.addToDom();
    this.tileTiers.addTier(secondTier);
    this.sonosTierIdx = 1;
    this.sonosGroupIdx = this.tileTiers.addGroup(this.sonosTierIdx, "Sonos");
    this.tileTiers.clear();
    this.setupInitialUI();
    this.makeUriButton(this.favouritesTierIdx, this.favouritesGroupIdx, "Test1", "musicicon", "/testuri1", 2, 2);
    this.tileTiers.reDoLayout();
    $(window).on('orientationchange', function() {
      return _this.tileTiers.reDoLayout();
    });
    return $(window).on('resize', function() {
      return _this.tileTiers.reDoLayout();
    });
  };

  TestWallTabApp.prototype.addClock = function(tierIdx, groupIdx) {
    var tile, tileBasics, visibility;
    visibility = "all";
    tileBasics = new TileBasics(this.tileColours.getNextColour(), 3, 1, null, "", "clock", visibility, this.tileTiers.getTileContainerSelector(tierIdx));
    tile = new Clock(tileBasics);
    return this.tileTiers.addTileToTierGroup(tierIdx, groupIdx, tile);
  };

  TestWallTabApp.prototype.addCalendar = function(tierIdx, onlyAddToGroupIdx) {
    var calG, calendarTileDefs, ctd, favG, lands, portr, tile, tileBasics, _i, _len, _results;
    if (onlyAddToGroupIdx == null) {
      onlyAddToGroupIdx = null;
    }
    calG = this.calendarGroupIdx;
    favG = this.favouritesGroupIdx;
    lands = "landscape";
    portr = "portrait";
    calendarTileDefs = [];
    calendarTileDefs.push(new CalendarTileDefiniton(lands, calG, 2, 2, 0));
    calendarTileDefs.push(new CalendarTileDefiniton(lands, calG, 2, 1, 1));
    calendarTileDefs.push(new CalendarTileDefiniton(portr, favG, 3, 2, 0));
    calendarTileDefs.push(new CalendarTileDefiniton(portr, calG, 3, 2, 1));
    calendarTileDefs.push(new CalendarTileDefiniton(portr, calG, 3, 2, 2));
    calendarTileDefs.push(new CalendarTileDefiniton(portr, calG, 3, 1, 3));
    _results = [];
    for (_i = 0, _len = calendarTileDefs.length; _i < _len; _i++) {
      ctd = calendarTileDefs[_i];
      if (!((onlyAddToGroupIdx != null) && (onlyAddToGroupIdx !== ctd.groupIdx))) {
        tileBasics = new TileBasics(this.tileColours.getNextColour(), ctd.colSpan, ctd.rowSpan, null, "", "calendar", ctd.visibility, this.tileTiers.getTileContainerSelector(tierIdx));
        tile = new CalendarTile(tileBasics, this.calendarUrl, ctd.calDayIndex);
        _results.push(this.tileTiers.addTileToTierGroup(tierIdx, ctd.groupIdx, tile));
      } else {
        _results.push(void 0);
      }
    }
    return _results;
  };

  TestWallTabApp.prototype.makeUriButton = function(tierIdx, groupIdx, name, iconname, uri, colSpan, rowSpan, visibility) {
    var tile, tileBasics;
    if (visibility == null) {
      visibility = "all";
    }
    tileBasics = new TileBasics(this.tileColours.getNextColour(), colSpan, rowSpan, "testCommand", uri, name, visibility, this.tileTiers.getTileContainerSelector(tierIdx));
    tile = new SceneButton(tileBasics, iconname, name);
    return this.tileTiers.addTileToTierGroup(tierIdx, groupIdx, tile);
  };

  TestWallTabApp.prototype.setupInitialUI = function() {
    this.addClock(this.favouritesTierIdx, this.favouritesGroupIdx);
    return this.addCalendar(this.calendarTierIdx);
  };

  TestWallTabApp.prototype.actionOnUserIdle = function() {
    return $("html, body").animate({
      scrollLeft: "0px"
    });
  };

  return TestWallTabApp;

})();
