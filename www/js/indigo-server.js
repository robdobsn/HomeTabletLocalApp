// Generated by CoffeeScript 1.7.1
var IndigoServer;

IndigoServer = (function() {
  function IndigoServer(serverURL) {
    this.serverURL = serverURL;
    this.ACTIONS_URI = this.serverURL + "/actions.json";
    this.numRefreshFailuresSinceSuccess = 0;
    this.firstRefreshAfterFailSecs = 10;
    this.nextRefreshesAfterFailSecs = 60;
    return;
  }

  IndigoServer.prototype.setReadyCallback = function(dataReadyCallback) {
    this.dataReadyCallback = dataReadyCallback;
  };

  IndigoServer.prototype.getActionGroups = function() {
    console.log("Requesting Indigo data from " + this.ACTIONS_URI);
    $.ajax(this.ACTIONS_URI, {
      type: "GET",
      dataType: "json",
      crossDomain: true,
      success: (function(_this) {
        return function(data, textStatus, jqXHR) {
          _this.processRecvdActions(data);
          console.log("Received Indigo data from " + _this.ACTIONS_URI);
          _this.numRefreshFailuresSinceSuccess = 0;
          LocalStorage.set(_this.ACTIONS_URI, data);
        };
      })(this),
      error: (function(_this) {
        return function(jqXHR, textStatus, errorThrown) {
          var storedData;
          LocalStorage.logEvent("IndLog", "AjaxFail Status= " + textStatus + " URL= " + _this.ACTIONS_URI + " Error= " + errorThrown);
          _this.numRefreshFailuresSinceSuccess++;
          setTimeout(function() {
            return _this.getActionGroups;
          }, (_this.numRefreshFailuresSinceSuccess === 1 ? _this.firstRefreshAfterFailSecs * 1000 : _this.nextRefreshesAfterFailSecs * 1000));
          storedData = LocalStorage.get(_this.ACTIONS_URI);
          if (storedData != null) {
            console.log("Using stored data for " + _this.ACTIONS_URI);
            _this.processRecvdActions(storedData);
          }
        };
      })(this)
    });
  };

  IndigoServer.prototype.processRecvdActions = function(data) {
    this.scenes = this.getScenes(data);
    this.scenes.sort(this.sortByRoomName);
    return this.dataReadyCallback(this.scenes);
  };

  IndigoServer.prototype.sortByRoomName = function(a, b) {
    if (a.groupName < b.groupName) {
      return -1;
    }
    if (a.groupName > b.groupName) {
      return 1;
    }
    return 0;
  };

  IndigoServer.prototype.getScenes = function(data, rooms) {
    var actionName, indigoScene, indigoScenes, name, roomName, scene, scenes, _i, _len;
    indigoScenes = data;
    scenes = [];
    for (_i = 0, _len = indigoScenes.length; _i < _len; _i++) {
      indigoScene = indigoScenes[_i];
      name = indigoScene.name.split(" - ");
      actionName = indigoScene.name;
      if (name.length > 1) {
        roomName = name[0].trim();
        actionName = name[1].trim();
      }
      scene = {
        actionNum: "",
        actionName: roomName + " " + actionName,
        groupName: roomName,
        actionUrl: this.serverURL + "/actions/" + indigoScene.nameURLEncoded + "?_method=execute"
      };
      scenes.push(scene);
    }
    return scenes;
  };

  IndigoServer.prototype.getActionGroupsXML = function() {
    var matchRe;
    matchRe = /<action\b[^>]href="(.*?).xml"[^>]*>(.*?)<\/action>/;
    $.ajax(this.ACTIONS_URI, {
      type: "GET",
      dataType: "xml",
      crossDomain: true,
      success: (function(_this) {
        return function(data, textStatus, jqXHR) {
          var action, actionDict, actions, bLoop, pos, respText;
          bLoop = true;
          respText = jqXHR.responseText;
          actions = [];
          console.log("Got from Indigo " + jqXHR.responseText);
          while (bLoop) {
            action = matchRe.exec(respText);
            if (action === null) {
              break;
            }
            pos = respText.search(matchRe);
            if (pos === -1) {
              break;
            }
            respText = respText.substring(pos + action[0].length);
            actionDict = {
              actionNum: "",
              actionName: action[2],
              groupName: "",
              actionUrl: _this.serverURL + action[1] + "?_method=execute"
            };
            actions[actions.length] = actionDict;
            console.log("Adding action " + JSON.stringify(actionDict));
          }
          return _this.dataReadyCallback(actions);
        };
      })(this)
    });
  };

  return IndigoServer;

})();
