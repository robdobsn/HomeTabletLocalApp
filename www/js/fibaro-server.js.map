{
  "version": 3,
  "file": "fibaro-server.js",
  "sourceRoot": "..\\..",
  "sources": [
    "www\\js\\fibaro-server.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "class App.FibaroServer\r\n\tconstructor: (@manager, @serverDef, @dataReadyCallback) ->\r\n\t\t@ROOMS_URL = @serverDef.url + \"/api/rooms\"\r\n\t\t@SCENES_URL = @serverDef.url + \"/api/scenes\"\r\n\t\treturn\r\n\r\n\tsetReadyCallback: (@dataReadyCallback) ->\r\n\t\treturn\r\n\t\t\r\n\treqActions: ->\r\n\t\t# xmlhttp = new XMLHttpRequest()\r\n\t\t# xmlhttp.onreadystatechange = () =>\r\n\t\t# \tif xmlhttp.readyState == 4\r\n\t\t# \t\tif xmlhttp.status == 200\r\n\t\t# \t\t\talert \"Resp \" + xmlhttp.responseText\r\n\t\t# \t\telse if xmlhttp.status == 400\r\n\t\t# \t\t\talert 'There was an error 400'\r\n\t\t# \t\telse\r\n\t\t# \t\t\talert 'Other error ' + xmlhttp.status\r\n\t\t# \telse\r\n\t\t# \t\talert('something else other than 200 was returned')\r\n\t\t# xmlhttp.open(\"GET\", @ROOMS_URL, true)\r\n\t\t# xmlhttp.setRequestHeader('Content-type', 'application/json')\r\n\t\t# xmlhttp.setRequestHeader(\"Authorization\", \"Basic \" + btoa(\"admin\" + \":\" + \"b6107430\"))\r\n\t\t# xmlhttp.send()\r\n\r\n\t\t# return\r\n\t\tconsole.log \"Get from Fibaro \" + @ROOMS_URL\r\n\t\t$.ajax @ROOMS_URL,\r\n\t\t\ttype: \"GET\"\r\n\t\t\tdataType: \"json\"\r\n\t\t\t# contentType: 'application/text'\r\n\t\t\tcrossDomain: true\r\n\t\t\t# headers: \"Authorization\": \"Basic \" + btoa(\"admin\" + \":\" + \"b6107430\")\r\n\t\t\t# beforeSend: (xhr) =>\r\n\t\t\t#     xhr.setRequestHeader(\"Authorization\", @makeBasicAuth(\"admin\", \"b6107430\"))\r\n\t\t\terror: (jqXHR, textStatus, errorThrown) =>\r\n\t\t\t\tconsole.log (\"Fibaro Rooms failed: \" + textStatus + \" \" + errorThrown)\r\n\t\t\t\treturn\r\n\t\t\tsuccess: (data, textStatus, jqXHR) =>\r\n\t\t\t\tconsole.log \"Got from Fibaro\"\r\n\t\t\t\t@rooms = data\r\n\t\t\t\t$.ajax @SCENES_URL,\r\n\t\t\t\t\ttype: \"GET\"\r\n\t\t\t\t\tdataType: \"json\"\r\n\t\t\t\t\tcrossDomain: true\r\n\t\t\t\t\tsuccess: (data, textStatus, jqXHR) =>\r\n\t\t\t\t\t\t@scenes = @getScenes(data, @rooms)\r\n\t\t\t\t\t\t@scenes.sort @sortByRoomName\r\n\t\t\t\t\t\t@dataReadyCallback(@serverDef.name, @scenes)\r\n\t\t\t\t\t\tconsole.log \"Fibaro data = \" + JSON.stringify(@scenes)\r\n\t\t\t\t\t\treturn\r\n\t\t\t\treturn\r\n\t\treturn\r\n\r\n\tmakeBasicAuth: (username, password) ->\r\n\t\ttok = username + ':' + password\r\n\t\thash = btoa(tok)\r\n\t\treturn 'Basic ' + hash\r\n\r\n\tsortByRoomName: (a, b) ->\r\n\t\tif a.groupName < b.groupName then return -1\r\n\t\tif a.groupName > b.groupName then return 1\r\n\t\treturn 0\r\n\r\n\tgetScenes: (data, rooms) ->\r\n\t\tfibaroScenes = data\r\n\t\tscenes = []\r\n\t\tfor fibaroScene in fibaroScenes\r\n\t\t\tif not \"roomID\" of fibaroScene\r\n\t\t\t\tcontinue\r\n\t\t\tfor room in rooms\r\n\t\t\t\tif not ((\"id\" of room) and (\"name\" of room))\r\n\t\t\t\t\tcontinue\r\n\t\t\t\tif room.id is fibaroScene.roomID\r\n\t\t\t\t\tsceneCmd = @serverDef.url + \"/api/sceneControl?id=\" + fibaroScene.id + \"&action=start\"\r\n\t\t\t\t\tscene = { actionNum: fibaroScene.id, actionName: fibaroScene.name, groupName: room.name, actionUrl: sceneCmd }\r\n\t\t\t\t\tscenes.push(scene)\r\n\t\t\t\t\tbreak\r\n\t\treturn scenes\r\n"
  ]
}